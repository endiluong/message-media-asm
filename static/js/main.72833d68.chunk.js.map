{"version":3,"sources":["components/Header/index.js","constant/index.js","actions/index.js","components/LightBox/index.js","components/ImageCard/index.js","components/ImageGrid/index.js","containers/ImageGridContainer/index.js","reducers/loadingReducer.js","reducers/imagesReducer.js","reducers/errorReducer.js","reducers/offsetReducer.js","reducers/index.js","api/giphy.js","sagas/ImagesSaga.js","sagas/index.js","store/index.js","App.js","index.js"],"names":["Header","className","IMAGES","API_BASE_URL","setImages","images","type","setoffSet","offset","LightBox","props","closeLightBox","onClose","isOpen","title","onClick","srcSet","url","src","GIPHY_IMAGE_JPG","alt","renderer","ImageCard","useState","isOpenLightBox","setOpenLightBox","image","user","avatar_url","display_name","username","ImageGrid","page","setPage","isLoading","error","onPageChange","handleScrollDown","useCallback","scrollHeight","scrollTop","clientHeight","id","message","window","location","reload","ref","onScroll","debounce","leading","trailing","map","ImageGridContainer","dispatch","useDispatch","isNextPage","setNextPage","useEffect","useSelector","state","handlePageChange","isPageChange","loadingReducer","action","imagesReducer","errorReducer","offsetReducer","rootReducer","combineReducers","giphy","axios","create","baseURL","headers","Accept","fetchImages","a","get","params","api_key","limit","response","status","Error","errors","data","handleImagesLoad","watchImagesLoad","getOffSet","select","call","pagination","put","takeEvery","imageSaga","configureStore","sagaMiddleware","createSagaMiddleware","store","createStore","compose","applyMiddleware","__REDUX_DEVTOOLS_EXTENSION__","run","rootSaga","App","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.72833d68.chunk.js","sourcesContent":["import \"./style.scss\";\r\n\r\nconst Header = () => {\r\n  const renderer = () => {\r\n    return (\r\n      <div className=\"header-box\">\r\n        <h1 className=\"display-5\">Giphy Images</h1>\r\n      </div>\r\n    );\r\n  };\r\n  return renderer();\r\n};\r\n\r\nexport default Header;\r\n","export const IMAGES = {\r\n  LOAD: \"IMAGES_LOAD\",\r\n  LOAD_SUCCESS: \"IMAGES_LOAD_SUCCESS\",\r\n  LOAD_FAIL: \"IMAGES_LOAD_FAIL\",\r\n  SET_OFFSET: \"SET_OFFSET\",\r\n};\r\nexport const STATS = {\r\n  LOAD: \"STATS_LOAD\",\r\n  LOAD_SUCCESS: \"STATS_LOAD_SUCCESS\",\r\n  LOAD_FAIL: \"STATS_LOAD_FAIL\",\r\n};\r\nexport const API_KEY = \"mDxBZ8g8muJniGkZE9PMb8JYc7Azs9yQ\";\r\nexport const API_URL = \"https://api.giphy.com\";\r\nexport const API_PREFIX = \"v1/gifs\";\r\nexport const API_GENERAL_HEADERS = {\r\n  Accept: \"application/json\",\r\n  \"Content-Type\": \"application/json\",\r\n};\r\nexport const API_BASE_URL = `${API_URL}/${API_PREFIX}`;\r\n\r\nexport const GIPHY_DATA_OFFSET = 20;\r\nexport const GIPHY_DATA_LIMIT = 20;\r\nexport const GIPHY_IMAGE_WEBP = \"preview_webp\";\r\nexport const GIPHY_IMAGE_JPG = \"480w_still\";\r\nexport const GIPHY_IMAGE_FULL = \"downsized\";\r\n","import { IMAGES, STATS } from \"../constant\";\r\n\r\nconst loadImages = () => ({\r\n  type: IMAGES.LOAD,\r\n});\r\nconst setImages = (images) => ({\r\n  type: IMAGES.LOAD_SUCCESS,\r\n  images,\r\n});\r\nconst setError = (error) => ({\r\n  type: IMAGES.LOAD_FAIL,\r\n  error,\r\n});\r\nconst setoffSet = (offset) => ({\r\n  type: IMAGES.SET_OFFSET,\r\n  offset,\r\n});\r\n\r\nconst loadImagesStats = (id) => ({\r\n  type: STATS.LOAD,\r\n  id,\r\n});\r\nconst setImagesStats = (id, downloads) => ({\r\n  type: STATS.LOAD_SUCCESS,\r\n  id,\r\n  downloads,\r\n});\r\nconst setImagesStatsError = (id) => ({\r\n  type: STATS.LOAD_FAIL,\r\n  id,\r\n});\r\nexport {\r\n  loadImages,\r\n  setImages,\r\n  setError,\r\n  loadImagesStats,\r\n  setImagesStats,\r\n  setImagesStatsError,\r\n  setoffSet,\r\n};\r\n","import { GIPHY_IMAGE_JPG, GIPHY_IMAGE_FULL } from \"../../constant\";\r\n\r\nimport \"./style.scss\";\r\n\r\nconst LightBox = (props) => {\r\n  const closeLightBox = () => {\r\n    props.onClose();\r\n  };\r\n\r\n  const renderer = () => {\r\n    const { isOpen, images, title } = props;\r\n\r\n    return images && isOpen ? (\r\n      <div className={`lightbox ${isOpen && \"show\"}`} onClick={closeLightBox}>\r\n        <div className=\"lightbox-wrapper\">\r\n          <picture className=\"lightbox-image\">\r\n            <source srcSet={images[GIPHY_IMAGE_FULL].url} type=\"image/gif\" />\r\n            <img src={images[GIPHY_IMAGE_JPG].url} alt={title} />\r\n          </picture>\r\n        </div>\r\n      </div>\r\n    ) : null;\r\n  };\r\n\r\n  return renderer();\r\n};\r\n\r\nexport default LightBox;\r\n","import { useState } from \"react\";\r\nimport { GIPHY_IMAGE_WEBP, GIPHY_IMAGE_JPG } from \"../../constant\";\r\nimport LightBox from \"../LightBox\";\r\n\r\nimport \"./style.scss\";\r\n\r\nconst ImageCard = (props) => {\r\n  const [isOpenLightBox, setOpenLightBox] = useState(false);\r\n\r\n  const renderer = () => {\r\n    const { image } = props;\r\n    const { title, images, user } = image;\r\n\r\n    const openLightBox = () => {\r\n      setOpenLightBox(true);\r\n    };\r\n\r\n    return (\r\n      <div className=\"col-6 col-md-4 col-lg-3\">\r\n        <section className=\"card\">\r\n          <div className=\"card-wrapper\">\r\n            <picture className=\"card-image\" onClick={openLightBox}>\r\n              <source srcSet={images[GIPHY_IMAGE_WEBP].url} type=\"image/webp\" />\r\n              <source srcSet={images[GIPHY_IMAGE_JPG].url} type=\"image/jpeg\" />\r\n              <img src={images[GIPHY_IMAGE_JPG].url} alt={title} />\r\n            </picture>\r\n            <div className=\"card-bottom d-flex align-items-center justify-content-between\">\r\n              <div className=\"mr-auto\">\r\n                <i className=\"fas fa-paperclip f6\"></i>\r\n              </div>\r\n              <div className=\"ml-auto\">\r\n                <span className=\"ml-2\">\r\n                  <i className=\"fas fa-eye mr-2\"></i>\r\n                </span>\r\n                <span className=\"ml-2\">\r\n                  <i className=\"fas fa-comment mr-2\"></i>{\" \"}\r\n                </span>\r\n                <span className=\"ml-2\">\r\n                  <i className=\"fas fa-heart mr-2\"></i>\r\n                </span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"card-user\">\r\n            <span className=\"card-user__avatar\">\r\n              <img src={user?.avatar_url} alt={user?.display_name} />\r\n            </span>\r\n            <span className=\"card-user__name\">{user?.username}</span>\r\n          </div>\r\n          <LightBox\r\n            isOpen={isOpenLightBox}\r\n            onClose={() => {\r\n              setOpenLightBox(false);\r\n            }}\r\n            {...image}\r\n          />\r\n        </section>\r\n      </div>\r\n    );\r\n  };\r\n  return renderer();\r\n};\r\n\r\nexport default ImageCard;\r\n","import { useState, useCallback } from \"react\";\r\nimport ImageCard from \"../ImageCard\";\r\nimport debounce from \"lodash/debounce\";\r\nimport \"./style.scss\";\r\n\r\nconst ImageGrid = (props) => {\r\n  const [page, setPage] = useState(null);\r\n  const { isLoading = false, images = [], error = null, onPageChange } = props;\r\n\r\n  const handleScrollDown = useCallback(() => {\r\n    const { scrollHeight, scrollTop, clientHeight } = page;\r\n    if (clientHeight + scrollTop === scrollHeight) {\r\n      onPageChange(true);\r\n    } else onPageChange(false);\r\n  }, [onPageChange, page]);\r\n\r\n  const renderImageToImageCard = () => {\r\n    const imageCardUIList = images?.map((image) => (\r\n      <ImageCard image={image} key={image.id} />\r\n    ));\r\n    return imageCardUIList;\r\n  };\r\n\r\n  const renderLoader = () => <div className=\"progress-line\"></div>;\r\n\r\n  const renderError = () => {\r\n    return (\r\n      <div\r\n        id=\"error-box\"\r\n        className=\"row d-flex flex-column justify-content-center align-items-center p-3\"\r\n      >\r\n        <h5 className=\"text-danger\">{error.message}</h5>\r\n        <button\r\n          className=\"btn btn-primary\"\r\n          onClick={() => window.location.reload()}\r\n        >\r\n          Reload Page\r\n        </button>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const renderer = () => {\r\n    return (\r\n      <>\r\n        {error ? (\r\n          renderError()\r\n        ) : (\r\n          <div\r\n            ref={(page) => {\r\n              setPage(page);\r\n            }}\r\n            className=\"image-grid container-fluid pt-3\"\r\n            onScroll={debounce(handleScrollDown, 100, {\r\n              leading: true,\r\n              trailing: true,\r\n            })}\r\n          >\r\n            <div className=\"row\">{renderImageToImageCard()}</div>\r\n            {isLoading ? renderLoader() : null}\r\n          </div>\r\n        )}\r\n      </>\r\n    );\r\n  };\r\n  return renderer();\r\n};\r\n\r\nexport default ImageGrid;\r\n","import { useState, useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { loadImages } from \"../../actions\";\r\nimport ImageGrid from \"../../components/ImageGrid\";\r\n\r\nconst ImageGridContainer = () => {\r\n  const dispatch = useDispatch();\r\n  const [isNextPage, setNextPage] = useState(false);\r\n  useEffect(() => {\r\n    dispatch(loadImages());\r\n  }, [dispatch, isNextPage]);\r\n\r\n  const isLoading = useSelector((state) => state.isLoading);\r\n\r\n  const images = useSelector((state) => state.images);\r\n  const error = useSelector((state) => state.error);\r\n\r\n  const handlePageChange = (isPageChange) => {\r\n    setNextPage(isPageChange);\r\n  };\r\n\r\n  const renderer = () => {\r\n    return (\r\n      <ImageGrid\r\n        images={images}\r\n        isLoading={isLoading}\r\n        error={error}\r\n        onPageChange={handlePageChange}\r\n      />\r\n    );\r\n  };\r\n  return renderer();\r\n};\r\n\r\nexport default ImageGridContainer;\r\n","import { IMAGES } from \"../constant\";\r\n\r\nconst loadingReducer = (state = false, action) => {\r\n  switch (action.type) {\r\n    case IMAGES.LOAD:\r\n      return true;\r\n    case IMAGES.LOAD_SUCCESS:\r\n    case IMAGES.LOAD_FAIL:\r\n      return false;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default loadingReducer;\r\n","import { IMAGES } from \"../constant\";\r\n\r\nconst imagesReducer = (state = [], action) => {\r\n  if (action.type === IMAGES.LOAD_SUCCESS) {\r\n    return [...state, ...action.images];\r\n  }\r\n  return state;\r\n};\r\n\r\nexport default imagesReducer;\r\n","import { IMAGES } from \"../constant\";\r\n\r\nconst errorReducer = (state = null, action) => {\r\n  switch (action.type) {\r\n    case IMAGES.LOAD_FAIL:\r\n      return action.error;\r\n    case IMAGES.LOAD_SUCCESS:\r\n    case IMAGES.LOAD:\r\n      return null;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default errorReducer;\r\n","import { IMAGES } from \"../constant\";\r\n\r\nconst offsetReducer = (state = 0, action) => {\r\n  switch (action.type) {\r\n    case IMAGES.SET_OFFSET:\r\n      return action.offset;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport default offsetReducer;\r\n","import loadingReducer from \"./loadingReducer\";\r\nimport imagesReducer from \"./imagesReducer\";\r\nimport errorReducer from \"./errorReducer\";\r\nimport offsetReducer from \"./offsetReducer\";\r\nimport { combineReducers } from \"redux\";\r\n\r\nconst rootReducer = combineReducers({\r\n  isLoading: loadingReducer,\r\n  images: imagesReducer,\r\n  error: errorReducer,\r\n  offset: offsetReducer,\r\n});\r\n\r\nexport default rootReducer;\r\n","import axios from \"axios\";\r\nimport {\r\n  API_BASE_URL,\r\n  API_GENERAL_HEADERS,\r\n  API_KEY,\r\n  GIPHY_DATA_LIMIT,\r\n} from \"../constant\";\r\n\r\nconst giphy = axios.create({\r\n  baseURL: API_BASE_URL,\r\n  headers: API_GENERAL_HEADERS,\r\n});\r\n\r\nconst fetchImages = async (offset) => {\r\n  const response = await giphy.get(\"/trending\", {\r\n    params: {\r\n      api_key: API_KEY,\r\n      limit: GIPHY_DATA_LIMIT,\r\n      offset,\r\n    },\r\n  });\r\n\r\n  if (response.status >= 400) {\r\n    throw new Error(response.errors);\r\n  }\r\n  return response.data;\r\n};\r\n\r\nexport { fetchImages };\r\n","import { takeEvery, select, call, put } from \"redux-saga/effects\";\r\nimport { IMAGES } from \"../constant\";\r\nimport { fetchImages } from \"../api/giphy\";\r\nimport { setImages, setoffSet, setError } from \"../actions\";\r\nimport { GIPHY_DATA_OFFSET } from \"../constant\";\r\n\r\nconst getOffSet = (state) => state.offset;\r\n\r\nfunction* handleImagesLoad() {\r\n  try {\r\n    const offset = yield select(getOffSet);\r\n\r\n    const images = yield call(fetchImages, offset);\r\n    if (images) {\r\n      const { data, pagination } = images;\r\n\r\n      yield put(setImages(data));\r\n      yield put(setoffSet(pagination.offset + GIPHY_DATA_OFFSET));\r\n    }\r\n  } catch (error) {\r\n    yield put(setError(error));\r\n  }\r\n}\r\n\r\n//watcherSaga\r\nexport default function* watchImagesLoad() {\r\n  yield takeEvery(IMAGES.LOAD, handleImagesLoad);\r\n}\r\n","import imageSaga from \"./ImagesSaga\";\r\nexport default imageSaga;\r\n","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport createSagaMiddleware from \"redux-saga\";\r\n\r\nimport rootReducer from \"../reducers\";\r\nimport rootSaga from \"../sagas\";\r\nimport { IMAGES } from \"../constant\";\r\n\r\nconst configureStore = () => {\r\n  const sagaMiddleware = createSagaMiddleware();\r\n  const store = createStore(\r\n    rootReducer,\r\n    compose(\r\n      applyMiddleware(sagaMiddleware),\r\n      window.__REDUX_DEVTOOLS_EXTENSION__ &&\r\n        window.__REDUX_DEVTOOLS_EXTENSION__()\r\n    )\r\n  );\r\n  sagaMiddleware.run(rootSaga);\r\n\r\n  return store;\r\n};\r\n\r\nexport default configureStore;\r\n","import { Provider } from \"react-redux\";\r\nimport Header from \"./components/Header\";\r\nimport ImageGridContainer from \"./containers/ImageGridContainer\";\r\nimport configureStore from \"./store\";\r\nimport \"./style.scss\";\r\nimport \"./assets/scss/main.scss\";\r\n\r\nconst store = configureStore();\r\n\r\nconst App = () => {\r\n  const renderer = () => {\r\n    return (\r\n      <Provider store={store}>\r\n        <div className=\"app\">\r\n          <Header />\r\n          <ImageGridContainer className=\"grid\" />\r\n        </div>\r\n      </Provider>\r\n    );\r\n  };\r\n  return renderer();\r\n};\r\n\r\nexport default App;\r\n","import ReactDOM from \"react-dom\";\r\n\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(<App />, document.querySelector(\"#root\"));\r\n"],"sourceRoot":""}